// GIT COMMANDS ✅


// Fetching changes from a remote repository
git fetch REMOTE-NAME
# Fetches updates made to a remote repository

// Merging changes into your local branch
git merge REMOTE-NAME/BRANCH-NAME
# Merges updates made online with your local work

// Pulling changes from a remote repository
git pull REMOTE-NAME BRANCH-NAME

git init // initializing the repo
git remote add origin https://github.com/sutanu03/...git // connecting local repo with github repo
git remote -v // to verify the remote url is correct
git status // checking status
git add .  // adding all files to github repo
git commit -m "first commit" // commit after changing 
git pull --rebase origin main // to rebase
git push origin main // push the changes that you have made to main branch of the repo






// HTML NOTES ✅

1. make html file // index.html 
2. make boilerplate code // dummy code for html (html:5) 
3. understand tags // <head> - here "head" is a tag
4. understand h1-h6 // h1(biggest heading) > h2 > h3 > h4 > h5 > h6(smallest)
5. understand live server // installed live server extention in vs code 
6. understand p // paragraph tag
7. understand br // break tag to break the line or print in the next line
8. understand image // use image in html using src = "image.img"
9. understand a // anchor tag to provide link using href = "https://www.google.com"
10. understand div // it a rectangle with full width but no height (height depends on it's children)
11. understand id (for id in style = #hello) // creating names for specific reason(id's name can't be repeated)
12. understand class (for class in style = .a) // class's name can be repeated






// CSS NOTES ✅ 

1. understanding css // style
2. making css file // style.css
3. understanding linking // linking css file within html code using link:css
4. css boilerplate // * {margin: 0; padding: 0; box-sizing: border-box;} || html, body {width: 100%; height: 100%;}
5. understanding css writing way // targeting elements by #id{..} or .class{...} or h1{...}/p{...}/h2{...}...anything{...}
6. understand width, height // making shapes using width and height
7. understanding units, px and % // when we want for expl: full(100%)/half(50%)/quarter(25%) etc. we use % but when we    want the exact position we use pixels(100px)
8. understand margin padding // margin is the space between two elements(margin:10px means margin between div in 10px from every side) and padding is something like space within one single element
9. understanding background image and things related to it // #backgroundImage { width: 100%; height: 100%; background-image: url(...); background-size: cover; background-position: center; }
10. understand position absolute // if we have two elements and one is up then we can see only upper one not the lower one
12. understand position relative // if we make anything absolute but want that in a particular box we use this
13. understanding flexbox // display flex means to move elements side by side in the same box // for width = justify content // for height = allign items






// JS - Basic ✅

1. var let const
2. hoitsing
3. data types
4. conditionals
5. loops
6. functions // bar bar repeat karna
7. param arguments // parameter and arguments
8. Array // collection of data
9. Push pop shift unshift splice // push = last ele add, pop = last element remove, unshift = add ele at first. shift = remove from first
  [splice = remove values from anywhere in the array (arr.splice(2,3) = remove from only index 2 to index 4 / 3values from index 2] 
10. Objects // ek indivisual ki saari details ko hold karna that's an object , in a key value pair (ex: key = "age" , value = "24")
  // 1) blank obj
  var a = {};
  // 2) filled obj
  var a = {
      age: 24,
      name: "Sutanu",
      email: "sg@gmail.com",
      contact: 80456524145,
      kuchbolo: function () {}
      }
      a.name = "Sutanu Ghosal"
  // accessing value
  console.log(a.age);
  //output = 24;
  // here age, name, email, contact are properties but kuchbolo is also a property but it is called a method 
  // updating any property
    the name is now changed in the object from "Sutanu" to "Sutanu Ghosal"
